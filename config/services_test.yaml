services:
    _defaults:
        public: true

    # If you need to access services in a test, create an alias
    # and then fetch that alias from the container. As a convention,
    # aliases are prefixed with test. For example:
    #
    # test.App\Service\MyService: '@App\Service\MyService'

    # library
    App\Tests\PresentationLayer\DataProvider\PresentationModelDataProvider:
        arguments:
            $deserializer: '@Library\Infrastructure\Helper\Deserializer'

    App\Tests\Command\SeedLanguageData:
        arguments:
            $languageEntryPoint: '@App\PresentationLayer\LearningMetadata\EntryPoint\LanguageEntryPoint'
            $categoryEntryPoint: '@App\PresentationLayer\LearningMetadata\EntryPoint\CategoryEntryPoint'
            $localeEntryPoint: '@App\PresentationLayer\LearningMetadata\EntryPoint\LocaleEntryPoint'
            $lessonEntryPoint: '@App\PresentationLayer\LearningMetadata\EntryPoint\LessonEntryPoint'
            $presentationModelDataProvider: '@App\Tests\PresentationLayer\DataProvider\PresentationModelDataProvider'
            $serializerWrapper: '@Library\Infrastructure\Helper\SerializerWrapper'
            $entityManager: '@Doctrine\ORM\EntityManagerInterface'
        tags:
            - { name: 'console.command' }

    App\Tests\Command\SeedWordData:
        arguments:
            $wordEntryPoint: '@App\PresentationLayer\LearningMetadata\EntryPoint\WordEntryPoint'
            $categoryRepository: '@App\DataSourceLayer\Infrastructure\LearningMetadata\Doctrine\Repository\CategoryRepository'
            $languageRepository: '@App\DataSourceLayer\Infrastructure\LearningMetadata\Doctrine\Repository\LanguageRepository'
            $localeRepository: '@App\DataSourceLayer\Infrastructure\LearningMetadata\Doctrine\Repository\LocaleRepository'
            $lessonRepository: '@App\DataSourceLayer\Infrastructure\LearningMetadata\Doctrine\Repository\LessonRepository'
            $presentationModelDataProvider: '@App\Tests\PresentationLayer\DataProvider\PresentationModelDataProvider'
            $serializerWrapper: '@Library\Infrastructure\Helper\SerializerWrapper'
            $entityManager: '@Doctrine\ORM\EntityManagerInterface'
        tags:
            - { name: 'console.command' }

    App\Tests\Command\CombinedSeed:
        tags:
            - { name: 'console.command' }
