# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    doctrine_env: '%env(APP_ENV)%'
    image_dirs:
        relative_image_path: /assets/images/
        image_upload_dir: '%kernel.root_dir%/../public/assets/images'

services:
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # LAYERS
    App\PresentationLayer\:
        resource: '../src/PresentationLayer'

    App\LogicLayer\:
        resource: '../src/LogicLayer'

    App\DataSourceLayer\:
        resource: '../src/DataSourceLayer'

    # GATEWAYS
    App\LogicGateway\:
        resource: '../src/LogicGateway'

    App\LogicGateway\Gateway\LanguageGateway:
        arguments:
            $serializerWrapper: '@Library\Infrastructure\Helper\SerializerWrapper'
            $logic: '@App\LogicLayer\LearningMetadata\Logic\LanguageLogic'

    App\LogicGateway\Gateway\CategoryGateway:
        arguments:
            $serializerWrapper: '@Library\Infrastructure\Helper\SerializerWrapper'
            $logic: '@App\LogicLayer\LearningMetadata\Logic\CategoryLogic'

    App\LogicGateway\Gateway\WordGateway:
        arguments:
            $serializerWrapper: '@Library\Infrastructure\Helper\SerializerWrapper'
            $logic: '@App\LogicLayer\LearningMetadata\Logic\WordLogic'

    App\DataSourceGateway\:
        resource: '../src/DataSourceGateway'

    # LIBRARY
    Library\:
        resource: '../src/Library'
        exclude: '../src/Library/Http/Request'

    Library\Http\Request\ResolvedRequestResolver:
        arguments:
            $serializerWrapper: '@Library\Infrastructure\Helper\SerializerWrapper'
            $validator: '@Library\Infrastructure\Helper\ModelValidator'

    Library\Infrastructure\FileUpload\Implementation\ImageUpload:
        arguments:
            $imageDirs: '%image_dirs%'
            $resizer: '@Library\Infrastructure\FileUpload\Implementation\ImageResize'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class

    # CONTROLLERS
    App\PresentationLayer\LearningMetadata\EntryPoint\:
        resource: '../src/PresentationLayer/LearningMetadata/EntryPoint'
        tags: ['controller.service_arguments']

    # SYMFONY SPECIFIC SERVICES
    App\Symfony\:
        resource: '../src/Symfony'

    # SYMFONY ARGUMENT RESOLVERS
    App\Symfony\Resolver\LanguageResolver:
        arguments:
            $resolvedRequestResolver: '@Library\Http\Request\ResolvedRequestResolver'
        tags:
            - { name: controller.argument_value_resolver, priority: 50 }

    App\Symfony\Resolver\CategoryResolver:
        arguments:
            $resolvedRequestResolver: '@Library\Http\Request\ResolvedRequestResolver'
        tags:
            - { name: controller.argument_value_resolver, priority: 50 }

    App\Symfony\Serializer\BooleanDeserializationFix:
        tags:
            - { name: jms_serializer.event_subscriber }

    # REPOSITORY

    App\DataSourceLayer\Infrastructure\Doctrine\Repository\WordRepository:
        arguments:
            $registry: '@doctrine'

    App\DataSourceLayer\Infrastructure\Doctrine\Repository\LanguageRepository:
        arguments:
            $registry: '@doctrine'

    App\DataSourceLayer\Infrastructure\Doctrine\Repository\CategoryRepository:
        arguments:
            $registry: '@doctrine'




